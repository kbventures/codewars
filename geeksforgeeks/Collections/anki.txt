// V3 Map?
const twoSum = (nums, target) => {
    const map = new Map();
  
    for (let i = 0; i < nums.length; i++) {
      let number = nums[i];
      let complement = target - number;
      let complementIndex = map.get(complement);
  
      if (complementIndex !== undefined) {
        return [i, complementIndex];
      }
  
      map.set(number, i);
    }
  };
  
  // Time Complexity: O(n)
  // Space Complexity: O(n)



  // https://leetcode.com/problems/rotate-array/description/

  // https://leetcode.com/problems/two-sum/description/

  // https://leetcode.com/problems/best-time-to-buy-and-sell-stock/submissions/1306134479/

